name: Main CI Pipelines

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      checks: write
      contents: write
      pull-requests: write

    outputs:
      commit-sha: ${{ steps.commit.outputs.short }}
      application-version: ${{ steps.read-properties.outputs.applicationVersion }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@0bdd871935719febd78681f197cd39af5b6e16a6  # v4.2.2
        with:
          gradle-version: '8.12.1'

      - name: Build, Test, and Scan
        run: ./gradlew build jacocoTestReport --info --scan
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Unit Test Results
          comment_mode: always
          path: |
            **/build/reports/tests/test/**
            **/build/test-results/tests/*.xml

      - name: Upload IntegrationTest Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          retention-days: 5 day
          path: |
            **/build/test-results/integrationTest/*.xml
            **/build/reports/tests/integrationTest/**

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b #  v2.18.0
        if: always()
        with:
          check_name: unit-test-results
          comment_mode: always
          retention-days: 5 day
          files: "**/build/test-results/test/*.xml"

      - name: Publish Integration Test Results
        uses: EnricoMi/publish-unit-test-result-action@170bf24d20d201b842d7a52403b73ed297e6645b #  v2.18.0
        if: always()
        with:
          check_name: Integration Tests Results
          comment_mode: always
          files: "**/build/test-results/integrationTest/*.xml"

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@f33476a5a3fd5a4f77cb5eef2ebe728c1dd5b921  # v2.11.0
        with:
          jacoco-csv-file: build/reports/jacoco/test/jacocoTestReport.csv
          generate-branches-badge: true

      - name: Add Coverage PR Comment
        uses: madrapps/jacoco-report@7c362aca34caf958e7b1c03464bd8781db9f8da7   # v1.7.1
        with:
          paths: ${{ github.workspace }}/**/build/reports/jacoco/test/jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 80
          min-coverage-changed-files: 80
          title: Code Coverage Report
          update-comment: true

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: build/reports/jacoco/

      - name: Read Properties
        id: read-properties
        uses: christian-draeger/read-properties@908f99d3334be3802ec7cb528395a69d19914e7b  #v1.1.1
        with:
          path: 'gradle.properties'
          properties: 'applicationVersion'

      - id: commit
        uses: prompt/actions-commit-hash@01d19a83c242e1851c9aa6cf9625092ecd095d09

      - name: Application release version
        run: |  
          echo GIT Commit HASH: ${{ steps.commit.outputs.short }}
          echo Application Version ${{ steps.read-properties.outputs.applicationVersion }}

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@0bdd871935719febd78681f197cd39af5b6e16a6 # v4.2.2

  publish:
    needs: build
    runs-on: ubuntu-latest
    if: >
      github.ref == 'refs/heads/main' || 
      (github.event_name == 'pull_request' && startsWith(github.head_ref, 'test/cicd-pipeline-test'))

    permissions:
      checks: write
      contents: write
      packages: write # Needed to push Docker images to GitHub Packages

    steps:
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Short SHA for Docker Image
        run: echo "DOCKER_RELEASE_VERSION=${{ needs.build.outputs.application-version }}-${{ needs.build.outputs.commit-sha }}" >> $GITHUB_ENV

      - name: Set DOCKER IMAGE in lower case
        run: echo "DOCKER_IMAGE=${GITHUB_REPOSITORY@L}" >> $GITHUB_ENV   # Bash function to switch to lower case the environment variable.

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.3.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.8.0

      - name: Build and push Docker images
        uses: docker/build-push-action@v6.13.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ env.DOCKER_IMAGE }}:latest, ghcr.io/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_RELEASE_VERSION }}
          build-args: | 
            GITHUB_USER=${{ github.actor }} 
            GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}
