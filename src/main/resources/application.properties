spring.application.name=restaurant-requests

# R2DBC Database Configuration
spring.r2dbc.url=r2dbc:postgresql://localhost:5432/restaurant_requests_db
spring.r2dbc.username=postgres
spring.r2dbc.password=db_password

# Enable connection pooling for R2DBC
spring.r2dbc.pool.enabled=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.url=jdbc:postgresql://localhost:5432/restaurant_requests_db
spring.flyway.user=postgres
spring.flyway.password=db_password
spring.flyway.locations=classpath:db/migration,classpath:db/prod_migrations
spring.flyway.cleanDisabled=false

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.properties.security.protocol=PLAINTEXT
spring.kafka.properties.sasl.jaas.mechanism=PLAIN

#spring.kafka.template.default-topic=shelf-events

spring.kafka.producer.client-id=request_worker_id
spring.kafka.producer.key-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.group-id=shelf_consumer_group_1_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

app.kafka.kitchen.topic.topic-name=kitchen-events
app.kafka.kitchen.topic.partitions=5

app.kafka.shelf.topic.topic-name=shelf-events
app.kafka.shelf.topic.partitions=2